# Scratch pad
# Write your ideas about how to put the pieces together here.

LoginWindow
===========
Reads in users' username (normally the email address) and password for icloud
server.
If "Save Credentials" checkbox is checked the first time user logs in password
and username are saved.
Next time the same username is typed in (or auto filled by application) the
password is filled automatically.
Note that we have no way of verifying the correctness of the credentials until
we try to actively login to icloud's calendar server.
If a username we have a record of (previously saved) is re-entered with a
different password, and "Save Credentials" checkbox is checked we update the
saved password for the user.  If the checkbox is not checked, credentials are not
updated.
NOTE: For the time being I am going to save user credentials in "data/"
directory.  But later, we need to modify the application so that the user can
select where his/her credentials will be saved.


UploadWindow
============
Two mutually exclusive checkboxes to select what type of roster user is going to
upload: term roster or a week roster.
Then "Upload Roster" button is enabled to select the roster file. This file is an
excel spreadsheet (*.xlsx).
"Enter" button is enabled once roster is updated.


NameSelectWindow
================
Centered around a combobox widget which is populated with the names in the
uploaded work roster.
User needs to select his/her name from the list.
There is a checkbox "Remember Me" to save the selected username.
If this is the first time the user logs in and the checkbox is checked, we save
the selected name against the username. If not and the username is known and a
name in the list is the one user selected previously, we auto select the combobox
with this name.
If a known user selects a different name we update this name as the one the last
used. We could potentially save all the names the user selected.  We could
either sort them according to recency or frequency of use.


Saving user credentials
-----------------------
We will get the hash of username (?MD5) and save credentials with this filename.
For example, akalankae@gmail.com gives MD5: 262f29a2e0b85a75a31f416da3cf8401.
So the credentials would be saved in 262f29a2e0b85a75a31f416da3cf8401.txt
Data should probably be in some non readable format for security, but first we
will save it as a text file for simplicity. Remember to change this to a data
file later, possibly using `pickle` module.
